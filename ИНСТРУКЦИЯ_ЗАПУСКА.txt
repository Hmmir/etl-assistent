═══════════════════════════════════════════════════════
  ИНСТРУКЦИЯ ПО ЗАПУСКУ ETL ASSISTANT
═══════════════════════════════════════════════════════

✅ ШАГ 1: Убедитесь что Docker работает
────────────────────────────────────────────────────────
Вся инфраструктура УЖЕ ЗАПУЩЕНА:
  ✓ PostgreSQL (порт 5432)
  ✓ ClickHouse (порт 9000)
  ✓ Kafka (порт 9092)
  ✓ Redis (порт 6379)
  ✓ Airflow (порт 8081)
  ✓ Hadoop HDFS (порт 9870)

Проверка:
  docker ps

═══════════════════════════════════════════════════════

✅ ШАГ 2: Запуск Backend
────────────────────────────────────────────────────────

ВАРИАНТ А: Через .bat файл (РЕКОМЕНДУЕТСЯ)
  
  1. Двойной клик на START_BACKEND.bat
  
  ИЛИ из командной строки:
  
  cd C:\Users\alien\Desktop\etl\etl-assistant-clean
  START_BACKEND.bat


ВАРИАНТ Б: Через PowerShell

  cd C:\Users\alien\Desktop\etl\etl-assistant-clean
  .\start_backend.ps1

═══════════════════════════════════════════════════════

✅ ШАГ 3: Проверка что backend запустился
────────────────────────────────────────────────────────

Откройте браузер:
  
  http://localhost:8000/docs

Вы должны увидеть Swagger UI с API документацией.

═══════════════════════════════════════════════════════

✅ ШАГ 4: Тестирование
────────────────────────────────────────────────────────

См. TEST_GUIDE.md для подробных инструкций.

БЫСТРЫЙ ТЕСТ:

1. Откройте http://localhost:8000/docs
2. Найдите POST /upload
3. Нажмите "Try it out"
4. Выберите файл backend\uploads\test_sample.csv
5. Нажмите "Execute"

Вы должны получить ответ с данными о файле.

═══════════════════════════════════════════════════════

✅ МОНИТОРИНГ ЛОГОВ (Опционально)
────────────────────────────────────────────────────────

В ДРУГОМ терминале:

  cd C:\Users\alien\Desktop\etl\etl-assistant-clean
  .\monitor_logs.ps1

Это покажет все ваши действия в реальном времени.

═══════════════════════════════════════════════════════

❌ TROUBLESHOOTING
────────────────────────────────────────────────────────

ПРОБЛЕМА: "Module not found: uvicorn"
РЕШЕНИЕ: 
  cd backend
  venv\Scripts\activate
  pip install -r requirements.txt

ПРОБЛЕМА: "Port 8000 already in use"
РЕШЕНИЕ:
  netstat -ano | findstr :8000
  taskkill /PID <номер> /F

ПРОБЛЕМА: Backend не запускается
РЕШЕНИЕ:
  1. Проверьте что Python 3.10+ установлен
  2. Проверьте что venv создан (папка backend\venv)
  3. Запустите через .bat файл чтобы увидеть ошибки

═══════════════════════════════════════════════════════

📞 ЧТО ДАЛЬШЕ
────────────────────────────────────────────────────────

После запуска backend:

1. Откройте http://localhost:8000/docs
2. Тестируйте API endpoints
3. Следите за логами
4. Сообщите о любых ошибках

═══════════════════════════════════════════════════════

Готово! Запускайте! 🚀
